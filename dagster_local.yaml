scheduler:
  module: dagster.core.scheduler
  class: DagsterDaemonScheduler

run_coordinator:
  module: dagster.core.run_coordinator
  class: QueuedRunCoordinator
  config:
    max_concurrent_runs: 10
    tag_concurrency_limits:
      - key: "dagster/concurrency_key"
        value: "database"
        limit: 2
      - key: "dagster/concurrency_key"
        value: "ml_training"
        limit: 1

# Use DefaultRunLauncher instead of DockerRunLauncher for simplicity
run_launcher:
  module: dagster.core.launcher.default_run_launcher
  class: DefaultRunLauncher

# Keep PostgreSQL storage since we have it running
run_storage:
  module: dagster_postgres.run_storage
  class: PostgresRunStorage
  config:
    postgres_db:
      hostname: anomstack_postgresql
      username:
        env: DAGSTER_POSTGRES_USER
      password:
        env: DAGSTER_POSTGRES_PASSWORD
      db_name:
        env: DAGSTER_POSTGRES_DB
      port: 5432

run_retries:
  enabled: true
  max_retries: 1

# Retention policies
retention:
  schedule:
    purge_after_days: 3
  sensor:
    purge_after_days:
      skipped: 1
      failure: 3
      success: 1

# Run monitoring
run_monitoring:
  enabled: true
  start_timeout_seconds: 300
  cancel_timeout_seconds: 180
  max_runtime_seconds: 900
  poll_interval_seconds: 60

# Disable telemetry
telemetry:
  enabled: false

schedules:
  use_threads: true
  num_workers: 8

sensors:
  use_threads: true
  num_workers: 4

schedule_storage:
  module: dagster_postgres.schedule_storage
  class: PostgresScheduleStorage
  config:
    postgres_db:
      hostname: anomstack_postgresql
      username:
        env: DAGSTER_POSTGRES_USER
      password:
        env: DAGSTER_POSTGRES_PASSWORD
      db_name:
        env: DAGSTER_POSTGRES_DB
      port: 5432

event_log_storage:
  module: dagster_postgres.event_log
  class: PostgresEventLogStorage
  config:
    postgres_db:
      hostname: anomstack_postgresql
      username:
        env: DAGSTER_POSTGRES_USER
      password:
        env: DAGSTER_POSTGRES_PASSWORD
      db_name:
        env: DAGSTER_POSTGRES_DB
      port: 5432
