FROM python:3.12-slim

# Install system dependencies including nginx
RUN apt-get update && apt-get install -y --no-install-recommends \
    git \
    build-essential \
    curl \
    cmake \
    nginx \
    apache2-utils \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

WORKDIR /opt/dagster/app

# Copy requirements and install Python dependencies
COPY requirements.txt requirements-dashboard.txt ./
RUN pip install --no-cache-dir -r requirements.txt && \
    pip install --no-cache-dir -r requirements-dashboard.txt

# Copy application code
COPY anomstack ./anomstack
COPY dashboard ./dashboard
COPY metrics ./metrics

# Copy configuration files
COPY dagster_fly.yaml ./dagster_home/dagster.yaml
COPY dagster_home/workspace.yaml ./dagster_home/workspace.yaml
COPY start.sh /opt/dagster/start.sh

# Verify files were copied and create any missing directories
RUN ls -la ./dagster_home/ && \
    mkdir -p /opt/dagster/dagster_home && \
    cp -r ./dagster_home/* /opt/dagster/dagster_home/ && \
    ls -la /opt/dagster/dagster_home/ && \
    chmod +x /opt/dagster/start.sh

# Create necessary directories
RUN mkdir -p /data/models /tmp/dagster/compute_logs

# Environment setup
ENV DAGSTER_HOME=/opt/dagster/dagster_home
ENV PYTHONPATH=/opt/dagster/app
ENV ANOMSTACK_DUCKDB_PATH=/data/anomstack.db
ENV ANOMSTACK_MODEL_PATH=local:///data/models
ENV ANOMSTACK_TABLE_KEY=metrics

# Copy example environment file
COPY .example.env .env

# Health check script
RUN echo '#!/bin/bash\n\
if curl -f http://localhost:3000/server_info 2>/dev/null; then\n\
    echo "Dagster webserver healthy"\n\
    exit 0\n\
else\n\
    echo "Dagster webserver not responding"\n\
    exit 1\n\
fi' > /usr/local/bin/health-check.sh && chmod +x /usr/local/bin/health-check.sh

# Setup nginx
COPY nginx.conf /etc/nginx/nginx.conf
# Password file will be created at runtime from environment variables

# Create nginx directories
RUN mkdir -p /var/log/nginx && \
    chown -R www-data:www-data /var/log/nginx && \
    ln -sf /dev/stdout /var/log/nginx/access.log && \
    ln -sf /dev/stderr /var/log/nginx/error.log

# Expose ports (nginx will handle routing)
EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD /usr/local/bin/health-check.sh

# Use simple startup script
CMD ["/opt/dagster/start.sh"] 