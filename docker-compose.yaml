services:
  # This service runs the postgres DB used by dagster for run storage, schedule storage,
  # and event log storage.
  anomstack_postgresql:
    image: postgres:11
    container_name: anomstack_postgresql
    environment:
      POSTGRES_USER: "${ANOMSTACK_POSTGRES_USER:-postgres_user}"
      POSTGRES_PASSWORD: "${ANOMSTACK_POSTGRES_PASSWORD:-postgres_password}"
      POSTGRES_DB: "${ANOMSTACK_POSTGRES_DB:-postgres_db}"
    ports:
      - "${ANOMSTACK_POSTGRES_FORWARD_PORT:-}:5432"
    networks:
      - anomstack_network

  # This service runs the gRPC server that loads your user code, in both dagit
  # and dagster-daemon. By setting DAGSTER_CURRENT_IMAGE to its own image, we tell the
  # run launcher to use this same image when launching runs in a new container as well.
  # Multiple containers like this can be deployed separately - each just needs to run on
  # its own port, and have its own entry in the workspace.yaml file that's loaded by dagit.
  anomstack_code:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.anomstack_code
    container_name: anomstack_code
    image: anomstack_code_image
    restart: always
    volumes:
      - ./tmp:/opt/dagster/app/tmp
      - ./tmpdata:/opt/dagster/app/tmpdata
    env_file:
      - .env
    environment:
      DAGSTER_POSTGRES_USER: "${ANOMSTACK_POSTGRES_USER:-postgres_user}"
      DAGSTER_POSTGRES_PASSWORD: "${ANOMSTACK_POSTGRES_PASSWORD:-postgres_password}"
      DAGSTER_POSTGRES_DB: "${ANOMSTACK_POSTGRES_DB:-postgres_db}"
      DAGSTER_CURRENT_IMAGE: "anomstack_code_image"
    networks:
      - anomstack_network

  # This service runs dagit, which loads your user code from the user code container.
  # Since our instance uses the QueuedRunCoordinator, any runs submitted from dagit will be put on
  # a queue and later dequeued and launched by dagster-daemon.
  anomstack_dagit:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.dagster
    entrypoint:
      - dagit
      - -h
      - "0.0.0.0"
      - -p
      - "3000"
      - -w
      - workspace.yaml
    container_name: anomstack_dagit
    expose:
      - "3000"
    ports:
      - "3000:3000"
    env_file:
      - .env
    environment:
      DAGSTER_POSTGRES_USER: "${ANOMSTACK_POSTGRES_USER:-postgres_user}"
      DAGSTER_POSTGRES_PASSWORD: "${ANOMSTACK_POSTGRES_PASSWORD:-postgres_password}"
      DAGSTER_POSTGRES_DB: "${ANOMSTACK_POSTGRES_DB:-postgres_db}"
    volumes: # Make docker client accessible so we can terminate containers from dagit
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/io_manager_storage:/tmp/io_manager_storage
      - ./tmp:/opt/dagster/app/tmp
      - ./tmpdata:/opt/dagster/app/tmpdata
    networks:
      - anomstack_network
    depends_on:
      - anomstack_postgresql
      - anomstack_code

  # This service runs the dagster-daemon process, which is responsible for taking runs
  # off of the queue and launching them, as well as creating runs from schedules or sensors.
  anomstack_daemon:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.dagster
    entrypoint:
      - dagster-daemon
      - run
    container_name: anomstack_daemon
    restart: on-failure
    env_file:
      - .env
    environment:
      DAGSTER_POSTGRES_USER: "${ANOMSTACK_POSTGRES_USER:-postgres_user}"
      DAGSTER_POSTGRES_PASSWORD: "${ANOMSTACK_POSTGRES_PASSWORD:-postgres_password}"
      DAGSTER_POSTGRES_DB: "${ANOMSTACK_POSTGRES_DB:-postgres_db}"
    volumes: # Make docker client accessible so we can launch containers using host docker
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/io_manager_storage:/tmp/io_manager_storage
      - ./tmp:/opt/dagster/app/tmp
      - ./tmpdata:/opt/dagster/app/tmpdata
    networks:
      - anomstack_network
    depends_on:
      - anomstack_postgresql
      - anomstack_code

  # This service runs the Streamlit dashboard
  anomstack_dashboard:
    build:
        context: .
        dockerfile: ./docker/Dockerfile.anomstack_dashboard
    container_name: anomstack_dashboard
    ports:
      - "8501:8501"
    env_file:
      - .env
    volumes:
      - ./tmp:/opt/dagster/app/tmp
      - ./tmpdata:/opt/dagster/app/tmpdata
    command: streamlit run /opt/dagster/app/dashboard.py --server.port 8501
    networks:
      - anomstack_network
    profiles:
      - "dashboard"

networks:
  anomstack_network:
    driver: bridge
    name: anomstack_network
