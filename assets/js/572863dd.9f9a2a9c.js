"use strict";(self.webpackChunkanomstack=self.webpackChunkanomstack||[]).push([[824],{7437:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>c,toc:()=>a});var r=i(4848),s=i(8453);const t={sidebar_position:1},o="Metrics Configuration",c={id:"configuration/metrics",title:"Metrics Configuration",description:"Learn how to configure metrics in Anomstack.",source:"@site/docs/configuration/metrics.md",sourceDirName:"configuration",slug:"/configuration/metrics",permalink:"/anomstack/docs/configuration/metrics",draft:!1,unlisted:!1,editUrl:"https://github.com/andrewm4894/anomstack/tree/main/docs/docs/configuration/metrics.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docsSidebar",previous:{title:"Storage Optimization",permalink:"/anomstack/docs/storage-optimization"},next:{title:"Hot Configuration Updates",permalink:"/anomstack/docs/configuration/hot-reload"}},l={},a=[{value:"Configuration File",id:"configuration-file",level:2},{value:"Overriding Config with Environment Variables",id:"overriding-config-with-environment-variables",level:2},{value:"Properties",id:"properties",level:2},{value:"Examples",id:"examples",level:2},{value:"Best Practices",id:"best-practices",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"metrics-configuration",children:"Metrics Configuration"})}),"\n",(0,r.jsx)(n.p,{children:"Learn how to configure metrics in Anomstack."}),"\n",(0,r.jsx)(n.h2,{id:"configuration-file",children:"Configuration File"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"config.yaml"})," file defines:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Metric properties"}),"\n",(0,r.jsx)(n.li,{children:"Data source settings"}),"\n",(0,r.jsx)(n.li,{children:"Schedule configuration"}),"\n",(0,r.jsx)(n.li,{children:"Alert thresholds"}),"\n",(0,r.jsx)(n.li,{children:"Custom parameters"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"overriding-config-with-environment-variables",children:"Overriding Config with Environment Variables"}),"\n",(0,r.jsx)(n.p,{children:"You can override any configuration parameter for a specific metric batch using environment variables of the form:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"ANOMSTACK__<METRIC_BATCH>__<PARAM>\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<METRIC_BATCH>"})," is the ",(0,r.jsx)(n.code,{children:"metric_batch"})," name from your YAML config, uppercased (replace dashes with underscores if present)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"<PARAM>"})," is the config parameter name, uppercased (use underscores, e.g. ",(0,r.jsx)(n.code,{children:"ALERT_METHODS"}),")."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.p,{children:"Suppose your metric batch config contains:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'metric_batch: "python_ingest_simple"\ndb: "duckdb"\nalert_methods: "email,slack"\ningest_cron_schedule: "*/2 * * * *"\n'})}),"\n",(0,r.jsxs)(n.p,{children:["To override these via environment variables, add to your ",(0,r.jsx)(n.code,{children:".env"})," file:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"ANOMSTACK__PYTHON_INGEST_SIMPLE__DB=bigquery\nANOMSTACK__PYTHON_INGEST_SIMPLE__ALERT_METHODS=email\nANOMSTACK__PYTHON_INGEST_SIMPLE__INGEST_CRON_SCHEDULE=*/1 * * * *\n"})}),"\n",(0,r.jsxs)(n.p,{children:["This will override the ",(0,r.jsx)(n.code,{children:"db"}),", ",(0,r.jsx)(n.code,{children:"alert_methods"}),", and ",(0,r.jsx)(n.code,{children:"ingest_cron_schedule"})," parameters for the ",(0,r.jsx)(n.code,{children:"python_ingest_simple"})," metric batch at runtime, without changing the YAML file."]}),"\n",(0,r.jsx)(n.p,{children:"This makes it easy to manage config via environment variables for different deployments or local development."}),"\n",(0,r.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,r.jsx)(n.p,{children:"Key configuration properties:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"name"}),": Metric identifier"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"description"}),": Metric description"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"source"}),": Data source configuration"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"schedule"}),": Execution schedule"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"alerts"}),": Alert settings"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,r.jsx)(n.p,{children:"Coming soon..."}),"\n",(0,r.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsx)(n.p,{children:"Coming soon..."})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>c});var r=i(6540);const s={},t=r.createContext(s);function o(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);