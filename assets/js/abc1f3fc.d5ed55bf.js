"use strict";(self.webpackChunkanomstack=self.webpackChunkanomstack||[]).push([[1382],{2846:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>t,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"configuration/hot-reload","title":"Hot Configuration Updates","description":"This guide explains how to update Anomstack configurations dynamically without restarting Docker containers.","source":"@site/docs/configuration/hot-reload.md","sourceDirName":"configuration","slug":"/configuration/hot-reload","permalink":"/anomstack/docs/configuration/hot-reload","draft":false,"unlisted":false,"editUrl":"https://github.com/andrewm4894/anomstack/tree/main/docs/docs/configuration/hot-reload.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"docsSidebar","previous":{"title":"Metrics Configuration","permalink":"/anomstack/docs/configuration/metrics"},"next":{"title":"GraphQL","permalink":"/anomstack/docs/graphql/"}}');var r=s(4848),o=s(8453);const l={sidebar_position:2},a="Hot Configuration Updates",t={},c=[{value:"\ud83d\udd25 What&#39;s New",id:"-whats-new",level:2},{value:"\ud83d\ude80 Quick Start",id:"-quick-start",level:2},{value:"Option 1: Manual Reload (On-Demand)",id:"option-1-manual-reload-on-demand",level:3},{value:"Option 2: Automatic Scheduled Reload",id:"option-2-automatic-scheduled-reload",level:3},{value:"Option 3: Smart File Watcher (Recommended)",id:"option-3-smart-file-watcher-recommended",level:3},{value:"\ud83d\udccb What Works with Hot Reload",id:"-what-works-with-hot-reload",level:2},{value:"\u2705 YAML Configuration Changes",id:"-yaml-configuration-changes",level:3},{value:"\u2705 SQL Query Updates",id:"-sql-query-updates",level:3},{value:"\u2705 Python Function Updates",id:"-python-function-updates",level:3},{value:"\u2705 New Metric Batches",id:"-new-metric-batches",level:3},{value:"\u26a0\ufe0f Requires Manual Container Restart",id:"\ufe0f-requires-manual-container-restart",level:3},{value:"\ud83e\udd16 Automated Reloading Options",id:"-automated-reloading-options",level:2},{value:"Scheduled Job (Option 2)",id:"scheduled-job-option-2",level:3},{value:"Smart File Watcher (Option 3) - <strong>Recommended</strong>",id:"smart-file-watcher-option-3---recommended",level:3},{value:"How File Watching Works",id:"how-file-watching-works",level:3},{value:"\ud83d\udd27 How It Works",id:"-how-it-works",level:2},{value:"Before (Required Container Rebuild)",id:"before-required-container-rebuild",level:3},{value:"After (Hot Reload Enabled)",id:"after-hot-reload-enabled",level:3},{value:"\ud83d\udcdd Updated Docker Configuration",id:"-updated-docker-configuration",level:2},{value:"Volume Mounts Added",id:"volume-mounts-added",level:3},{value:"\ud83d\udd04 Configuration Reload Script",id:"-configuration-reload-script",level:2},{value:"Script Usage",id:"script-usage",level:3},{value:"\ud83d\udee0\ufe0f Troubleshooting",id:"\ufe0f-troubleshooting",level:2},{value:"Configuration Reload Failed",id:"configuration-reload-failed",level:3},{value:"Volume Mount Issues",id:"volume-mount-issues",level:3},{value:"Environment Variable Updates",id:"environment-variable-updates",level:3},{value:"\ud83c\udfaf Best Practices",id:"-best-practices",level:2},{value:"1. Test Changes Gradually",id:"1-test-changes-gradually",level:3},{value:"2. Validate Configurations",id:"2-validate-configurations",level:3},{value:"3. Environment vs YAML",id:"3-environment-vs-yaml",level:3},{value:"4. Version Control",id:"4-version-control",level:3},{value:"\ud83d\udd0d Monitoring Changes",id:"-monitoring-changes",level:2},{value:"Dagster UI",id:"dagster-ui",level:3},{value:"Dashboard",id:"dashboard",level:3},{value:"Logs",id:"logs",level:3},{value:"\ud83d\udea8 Migration Notes",id:"-migration-notes",level:2},{value:"\ud83d\udca1 Advanced Usage",id:"-advanced-usage",level:2},{value:"Custom Dagster Host/Port",id:"custom-dagster-hostport",level:3},{value:"Multiple Code Locations",id:"multiple-code-locations",level:3},{value:"Automated Reloading",id:"automated-reloading",level:3},{value:"\ud83c\udf89 Benefits",id:"-benefits",level:2},{value:"Manual Reload",id:"manual-reload",level:3},{value:"Automated Reload (YAML Files Only)",id:"automated-reload-yaml-files-only",level:3},{value:"Overall",id:"overall",level:3}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"hot-configuration-updates",children:"Hot Configuration Updates"})}),"\n",(0,r.jsx)(n.p,{children:"This guide explains how to update Anomstack configurations dynamically without restarting Docker containers."}),"\n",(0,r.jsx)(n.h2,{id:"-whats-new",children:"\ud83d\udd25 What's New"}),"\n",(0,r.jsx)(n.p,{children:"With the updated Docker setup, you can now:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Update YAML configs"})," in ",(0,r.jsx)(n.code,{children:"/metrics"})," and see changes immediately"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Modify environment variables"})," in ",(0,r.jsx)(n.code,{children:".env"})," (requires container restart)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Add new metric batches"})," without rebuilding images"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Change SQL queries or Python functions"})," on the fly"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Reload Dagster"})," with a single command"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-quick-start",children:"\ud83d\ude80 Quick Start"}),"\n",(0,r.jsx)(n.h3,{id:"option-1-manual-reload-on-demand",children:"Option 1: Manual Reload (On-Demand)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# 1. Make changes to YAML files in /metrics/\nvim metrics/my_batch/config.yaml\n\n# 2. Reload manually\nmake reload-config\n"})}),"\n",(0,r.jsx)(n.h3,{id:"option-2-automatic-scheduled-reload",children:"Option 2: Automatic Scheduled Reload"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Enable automatic reload every 5 minutes\nmake enable-auto-reload\n\n# Restart containers to activate\nmake docker-restart\n"})}),"\n",(0,r.jsx)(n.h3,{id:"option-3-smart-file-watcher-recommended",children:"Option 3: Smart File Watcher (Recommended)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Enable smart file watching (reloads only when files change)\nmake enable-config-watcher\n\n# Restart containers to activate\nmake docker-restart\n"})}),"\n",(0,r.jsx)(n.p,{children:"That's it! Your changes will now be automatically detected and applied."}),"\n",(0,r.jsx)(n.h2,{id:"-what-works-with-hot-reload",children:"\ud83d\udccb What Works with Hot Reload"}),"\n",(0,r.jsx)(n.h3,{id:"-yaml-configuration-changes",children:"\u2705 YAML Configuration Changes"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Metric batch configurations (",(0,r.jsx)(n.code,{children:"metrics/*/*.yaml"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:["Default settings (",(0,r.jsx)(n.code,{children:"metrics/defaults/defaults.yaml"}),")"]}),"\n",(0,r.jsx)(n.li,{children:"Schedule configurations"}),"\n",(0,r.jsx)(n.li,{children:"Alert thresholds and settings"}),"\n",(0,r.jsx)(n.li,{children:"Database connection parameters (except connection strings)"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"-sql-query-updates",children:"\u2705 SQL Query Updates"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Ingest SQL queries (",(0,r.jsx)(n.code,{children:"ingest_sql"})," or ",(0,r.jsx)(n.code,{children:"ingest_sql_file"}),")"]}),"\n",(0,r.jsx)(n.li,{children:"Custom SQL templates"}),"\n",(0,r.jsx)(n.li,{children:"Query logic changes"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"-python-function-updates",children:"\u2705 Python Function Updates"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Custom ingest functions (",(0,r.jsx)(n.code,{children:"ingest_fn"}),")"]}),"\n",(0,r.jsx)(n.li,{children:"Preprocessing functions"}),"\n",(0,r.jsx)(n.li,{children:"Python-based metric calculations"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"-new-metric-batches",children:"\u2705 New Metric Batches"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Adding entirely new metric batch folders"}),"\n",(0,r.jsx)(n.li,{children:"New YAML + SQL/Python combinations"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"\ufe0f-requires-manual-container-restart",children:"\u26a0\ufe0f Requires Manual Container Restart"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Environment variable changes in ",(0,r.jsx)(n.code,{children:".env"})]}),"\n",(0,r.jsx)(n.li,{children:"Database connection string changes"}),"\n",(0,r.jsx)(n.li,{children:"Infrastructure-level changes"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["For ",(0,r.jsx)(n.code,{children:".env"})," file changes, use this workflow:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# 1. Edit environment variables\nvim .env\n\n# 2. Restart containers to pick up new environment variables\nmake docker-restart  # or docker compose restart\n\n# 3. Reload configuration (optional - to be safe)\nmake reload-config\n"})}),"\n",(0,r.jsx)(n.h2,{id:"-automated-reloading-options",children:"\ud83e\udd16 Automated Reloading Options"}),"\n",(0,r.jsx)(n.h3,{id:"scheduled-job-option-2",children:"Scheduled Job (Option 2)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"How it works"}),": Runs a Dagster job every N minutes to reload configurations"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Best for"}),": Development environments where you want periodic updates"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Configuration"}),":","\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'ANOMSTACK_AUTO_CONFIG_RELOAD=true           # Enable the feature\nANOMSTACK_CONFIG_RELOAD_CRON="*/5 * * * *"   # Every 5 minutes\nANOMSTACK_CONFIG_RELOAD_STATUS=RUNNING      # Start the schedule\n'})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Pros"}),": Simple, predictable timing"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Cons"}),": May reload unnecessarily, slight resource usage"]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"smart-file-watcher-option-3---recommended",children:["Smart File Watcher (Option 3) - ",(0,r.jsx)(n.strong,{children:"Recommended"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"How it works"}),": Monitors YAML files for changes, reloads only when needed"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Best for"}),": Production and development - most efficient approach"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Scope"}),": ",(0,r.jsx)(n.strong,{children:"YAML files only"})," - .env changes still require manual restart"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Configuration"}),":","\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"ANOMSTACK_CONFIG_WATCHER=true              # Enable the sensor\nANOMSTACK_CONFIG_WATCHER_INTERVAL=30       # Check every 30 seconds\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Pros"}),": Only reloads when necessary, most responsive, resource efficient"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Cons"}),": Doesn't handle .env changes (by design for safety)"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"how-file-watching-works",children:"How File Watching Works"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Hash Calculation"}),": Creates MD5 hash of all YAML files (content + modification time)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Change Detection"}),": Compares current hash with last known state"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Smart Reloading"}),": Only triggers reload when YAML files actually change"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"State Persistence"}),": Remembers last known state across Dagster restarts"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Note"}),": File watcher intentionally excludes ",(0,r.jsx)(n.code,{children:".env"})," files to avoid complex container restart scenarios that could cause side effects."]}),"\n",(0,r.jsx)(n.h2,{id:"-how-it-works",children:"\ud83d\udd27 How It Works"}),"\n",(0,r.jsx)(n.p,{children:"The hot reload system works by:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Volume Mounting"}),": The ",(0,r.jsx)(n.code,{children:"/metrics"})," directory is now mounted as a volume in Docker containers"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Dagster Code Location Reload"}),": Uses Dagster's built-in GraphQL API to reload code locations"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Configuration Re-parsing"}),": The ",(0,r.jsx)(n.code,{children:"get_specs()"})," function re-reads YAML files from the mounted directory"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"before-required-container-rebuild",children:"Before (Required Container Rebuild)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Host /metrics \u2192 Docker Image (frozen at build time) \u2192 Container\n"})}),"\n",(0,r.jsx)(n.h3,{id:"after-hot-reload-enabled",children:"After (Hot Reload Enabled)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Host /metrics \u2192 Docker Volume Mount \u2192 Container (live updates)\n"})}),"\n",(0,r.jsx)(n.h2,{id:"-updated-docker-configuration",children:"\ud83d\udcdd Updated Docker Configuration"}),"\n",(0,r.jsx)(n.h3,{id:"volume-mounts-added",children:"Volume Mounts Added"}),"\n",(0,r.jsx)(n.p,{children:"The following services now mount the metrics directory:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"# docker-compose.yaml\nanomstack_code:\n  volumes:\n    - ./metrics:/opt/dagster/app/metrics  # \ud83d\udd25 NEW\n\nanomstack_webserver:\n  volumes:\n    - ./metrics:/opt/dagster/app/metrics  # \ud83d\udd25 NEW\n\nanomstack_daemon:\n  volumes:\n    - ./metrics:/opt/dagster/app/metrics  # \ud83d\udd25 NEW\n\n# dagster_docker.yaml (for job containers)\nrun_launcher:\n  config:\n    container_kwargs:\n      volumes:\n        - /path/to/metrics:/opt/dagster/app/metrics  # \ud83d\udd25 NEW\n"})}),"\n",(0,r.jsx)(n.h2,{id:"-configuration-reload-script",children:"\ud83d\udd04 Configuration Reload Script"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"scripts/reload_config.py"})," script:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u2705 Validates configuration files are accessible"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Checks Dagster health before attempting reload"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Uses GraphQL API to reload code locations"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Provides clear success/error messages"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Shows loaded repositories after reload"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"script-usage",children:"Script Usage"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# From anomstack root directory\npython3 scripts/reload_config.py\n\n# Via Makefile\nmake reload-config\n"})}),"\n",(0,r.jsx)(n.h2,{id:"\ufe0f-troubleshooting",children:"\ud83d\udee0\ufe0f Troubleshooting"}),"\n",(0,r.jsx)(n.h3,{id:"configuration-reload-failed",children:"Configuration Reload Failed"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Check container status\ndocker compose ps\n\n# Check Dagster logs\ndocker compose logs anomstack_code\n\n# Restart specific service if needed\ndocker compose restart anomstack_code\n\n# Full restart if required\ndocker compose restart\n"})}),"\n",(0,r.jsx)(n.h3,{id:"volume-mount-issues",children:"Volume Mount Issues"}),"\n",(0,r.jsx)(n.p,{children:"If configurations aren't updating:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Verify volume mounts:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"docker compose exec anomstack_code ls -la /opt/dagster/app/metrics\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Check file permissions:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Ensure metrics directory is readable\nchmod -R 755 metrics/\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"environment-variable-updates",children:"Environment Variable Updates"}),"\n",(0,r.jsxs)(n.p,{children:["For ",(0,r.jsx)(n.code,{children:".env"})," file changes, use the manual workflow:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# 1. Edit your environment variables\nvim .env\n\n# 2. Restart containers (required for env var changes)\nmake docker-restart\n\n# 3. Optional: Reload configs to be safe\nmake reload-config\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Why manual?"})," Container restarts require careful orchestration. Automated restart could cause side effects, so we keep this as an explicit, predictable user action."]}),"\n",(0,r.jsx)(n.h2,{id:"-best-practices",children:"\ud83c\udfaf Best Practices"}),"\n",(0,r.jsx)(n.h3,{id:"1-test-changes-gradually",children:"1. Test Changes Gradually"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Make small, incremental changes"}),"\n",(0,r.jsxs)(n.li,{children:["Test each change with ",(0,r.jsx)(n.code,{children:"make reload-config"})]}),"\n",(0,r.jsx)(n.li,{children:"Monitor Dagster UI for successful reloads"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"2-validate-configurations",children:"2. Validate Configurations"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Use the reload script to catch syntax errors early"}),"\n",(0,r.jsx)(n.li,{children:"Check Dagster logs if reload fails"}),"\n",(0,r.jsx)(n.li,{children:"Keep backup copies of working configurations"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"3-environment-vs-yaml",children:"3. Environment vs YAML"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Use YAML for business logic (thresholds, schedules, SQL)"}),"\n",(0,r.jsx)(n.li,{children:"Use environment variables for secrets and deployment-specific settings"}),"\n",(0,r.jsx)(n.li,{children:"Use environment variable overrides for testing different values"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"4-version-control",children:"4. Version Control"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Commit configuration changes to git"}),"\n",(0,r.jsx)(n.li,{children:"Use branching for experimental configurations"}),"\n",(0,r.jsx)(n.li,{children:"Document breaking changes in commit messages"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-monitoring-changes",children:"\ud83d\udd0d Monitoring Changes"}),"\n",(0,r.jsx)(n.h3,{id:"dagster-ui",children:"Dagster UI"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Visit ",(0,r.jsx)(n.a,{href:"http://localhost:3000",children:"http://localhost:3000"})]}),"\n",(0,r.jsx)(n.li,{children:'Check "Workspace" tab for reload status'}),"\n",(0,r.jsx)(n.li,{children:'Monitor "Runs" tab for job execution'}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"dashboard",children:"Dashboard"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Visit ",(0,r.jsx)(n.a,{href:"http://localhost:5001",children:"http://localhost:5001"})]}),"\n",(0,r.jsx)(n.li,{children:"Verify metric batches appear correctly"}),"\n",(0,r.jsx)(n.li,{children:"Check that data flows as expected"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"logs",children:"Logs"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Watch all services\ndocker compose logs -f\n\n# Focus on specific service\ndocker compose logs -f anomstack_code\n"})}),"\n",(0,r.jsx)(n.h2,{id:"-migration-notes",children:"\ud83d\udea8 Migration Notes"}),"\n",(0,r.jsx)(n.p,{children:"If you're updating from a previous version:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Pull latest changes"})," including Docker configuration updates"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Restart containers"})," to apply volume mounts:","\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"docker compose down\ndocker compose up -d\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Test hot reload"})," with a small configuration change"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Update your workflow"})," to use ",(0,r.jsx)(n.code,{children:"make reload-config"})," instead of container restarts"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-advanced-usage",children:"\ud83d\udca1 Advanced Usage"}),"\n",(0,r.jsx)(n.h3,{id:"custom-dagster-hostport",children:"Custom Dagster Host/Port"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# If running Dagster on different host/port\nDAGSTER_HOST=my-host DAGSTER_PORT=3001 python3 scripts/reload_config.py\n"})}),"\n",(0,r.jsx)(n.h3,{id:"multiple-code-locations",children:"Multiple Code Locations"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# Modify scripts/reload_config.py to reload specific locations\nreload_code_location("my_custom_location")\n'})}),"\n",(0,r.jsx)(n.h3,{id:"automated-reloading",children:"Automated Reloading"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Use with file watching tools for automatic reload\n# (Not recommended for production)\nfswatch -o metrics/ | xargs -n1 -I{} make reload-config\n"})}),"\n",(0,r.jsx)(n.h2,{id:"-benefits",children:"\ud83c\udf89 Benefits"}),"\n",(0,r.jsx)(n.h3,{id:"manual-reload",children:"Manual Reload"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\ud83d\ude80 Faster Development"}),": No more waiting for container rebuilds"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\ud83d\udd04 Quick Iterations"}),": Test configuration changes in seconds"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\ud83d\udca1 Better UX"}),": Immediate feedback on configuration changes"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"automated-reload-yaml-files-only",children:"Automated Reload (YAML Files Only)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\ud83e\udd16 Zero Intervention"}),": Set it and forget it - YAML configs update automatically"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\u26a1 Real-time Updates"}),": YAML changes detected and applied within seconds"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\ud83c\udfaf Smart Detection"}),": Only reloads when YAML files actually change"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\ud83d\udcca Dagster Integration"}),": Full visibility in Dagster UI (jobs, sensors, logs)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\ud83d\udee1\ufe0f Production Ready"}),": Robust error handling and logging"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\ud83d\udd12 Safe by Design"}),": Avoids complex container restart automation"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"overall",children:"Overall"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\ud83d\udee1\ufe0f Safer Operations"}),": Avoid full container restarts in production"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\ud83d\udcc8 Improved Productivity"}),": Spend more time on analysis, less on deployment"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\ud83d\udd0d Full Observability"}),": All reload attempts logged and trackable in Dagster"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"This feature requires Anomstack v1.x+ with updated Docker configurations."})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>a});var i=s(6540);const r={},o=i.createContext(r);function l(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);