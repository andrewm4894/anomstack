"use strict";(self.webpackChunkanomstack=self.webpackChunkanomstack||[]).push([[2258],{7539:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"miscellaneous/scripts-utilities","title":"Scripts & Utilities","description":"Anomstack includes a collection of utility scripts for common administrative tasks, database management, system maintenance, and development workflows. These scripts are located in the scripts/ directory.","source":"@site/docs/miscellaneous/scripts-utilities.md","sourceDirName":"miscellaneous","slug":"/miscellaneous/scripts-utilities","permalink":"/anomstack/docs/miscellaneous/scripts-utilities","draft":false,"unlisted":false,"editUrl":"https://github.com/andrewm4894/anomstack/tree/main/docs/docs/miscellaneous/scripts-utilities.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"docsSidebar","previous":{"title":"Start Schedules (GraphQL)","permalink":"/anomstack/docs/graphql/examples/start_schedule"}}');var t=s(4848),r=s(8453);const a={sidebar_position:1},l="Scripts & Utilities",c={},o=[{value:"\ud83d\udcc1 Directory Structure",id:"-directory-structure",level:2},{value:"\ud83d\udd27 Administrative Utilities",id:"-administrative-utilities",level:2},{value:"Configuration Hot-Reload",id:"configuration-hot-reload",level:3},{value:"Long-Running Task Management",id:"long-running-task-management",level:3},{value:"\ud83d\uddc4\ufe0f Database Utilities (SQLite)",id:"\ufe0f-database-utilities-sqlite",level:2},{value:"Performance Optimization",id:"performance-optimization",level:3},{value:"Database Inspection",id:"database-inspection",level:3},{value:"Custom SQL Queries",id:"custom-sql-queries",level:3},{value:"\ud83d\udc33 System Utilities",id:"-system-utilities",level:2},{value:"Docker Environment Reset",id:"docker-environment-reset",level:3},{value:"Interactive Mode (Recommended)",id:"interactive-mode-recommended",level:4},{value:"Direct Reset Levels",id:"direct-reset-levels",level:4},{value:"Features",id:"features",level:4},{value:"Dagster Storage Cleanup",id:"dagster-storage-cleanup",level:3},{value:"\ud83e\uddea Development Utilities",id:"-development-utilities",level:2},{value:"API Integration Testing",id:"api-integration-testing",level:3},{value:"\ud83d\udccb Common Usage Patterns",id:"-common-usage-patterns",level:2},{value:"Daily Maintenance Workflow",id:"daily-maintenance-workflow",level:3},{value:"Configuration Update Workflow",id:"configuration-update-workflow",level:3},{value:"Database Analysis Workflow",id:"database-analysis-workflow",level:3},{value:"System Reset Workflow",id:"system-reset-workflow",level:3},{value:"\ud83d\udee0\ufe0f Advanced Usage",id:"\ufe0f-advanced-usage",level:2},{value:"Custom Environment Configuration",id:"custom-environment-configuration",level:3},{value:"Automation and Scheduling",id:"automation-and-scheduling",level:3},{value:"Docker Integration",id:"docker-integration",level:3},{value:"\ud83d\udd10 Security Considerations",id:"-security-considerations",level:2},{value:"\ud83d\udca1 Best Practices",id:"-best-practices",level:2},{value:"\ud83c\udd98 Troubleshooting",id:"-troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Getting Help",id:"getting-help",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"scripts--utilities",children:"Scripts & Utilities"})}),"\n",(0,t.jsxs)(n.p,{children:["Anomstack includes a collection of utility scripts for common administrative tasks, database management, system maintenance, and development workflows. These scripts are located in the ",(0,t.jsx)(n.code,{children:"scripts/"})," directory."]}),"\n",(0,t.jsx)(n.h2,{id:"-directory-structure",children:"\ud83d\udcc1 Directory Structure"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"scripts/\n\u251c\u2500\u2500 README.md                    # Overview of all scripts\n\u251c\u2500\u2500 kill_long_running_tasks.py   # Terminate stuck Dagster jobs\n\u251c\u2500\u2500 reload_config.py             # Hot-reload Dagster configuration\n\u251c\u2500\u2500 posthog_example.py           # Test PostHog integration\n\u251c\u2500\u2500 sqlite/                      # SQLite database utilities\n\u2502   \u251c\u2500\u2500 create_index.py         # Create performance indexes\n\u2502   \u251c\u2500\u2500 list_tables.py          # List all database tables\n\u2502   \u251c\u2500\u2500 list_indexes.py         # List all database indexes\n\u2502   \u251c\u2500\u2500 qry.py                  # Execute custom SQL queries\n\u2502   \u2514\u2500\u2500 qry.sql                 # Example/template SQL query\n\u2514\u2500\u2500 utils/                      # System utilities\n    \u251c\u2500\u2500 reset_docker.sh         # Docker environment reset tool\n    \u251c\u2500\u2500 cleanup_dagster_storage.sh # Clean up Dagster storage\n    \u2514\u2500\u2500 README.md               # Utilities documentation\n"})}),"\n",(0,t.jsx)(n.h2,{id:"-administrative-utilities",children:"\ud83d\udd27 Administrative Utilities"}),"\n",(0,t.jsx)(n.h3,{id:"configuration-hot-reload",children:"Configuration Hot-Reload"}),"\n",(0,t.jsx)(n.p,{children:"Reload Dagster configuration without restarting containers."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Script"}),": ",(0,t.jsx)(n.code,{children:"reload_config.py"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"cd scripts/\npython reload_config.py\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Use Cases:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Applied configuration changes to YAML files"}),"\n",(0,t.jsx)(n.li,{children:"Updated environment variables"}),"\n",(0,t.jsx)(n.li,{children:"Added new metric batches"}),"\n",(0,t.jsx)(n.li,{children:"Modified job schedules"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Features:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Works with running Docker containers"}),"\n",(0,t.jsx)(n.li,{children:"Reloads code locations via GraphQL API"}),"\n",(0,t.jsx)(n.li,{children:"Provides feedback on reload status"}),"\n",(0,t.jsx)(n.li,{children:"Supports custom Dagster host/port configuration"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"long-running-task-management",children:"Long-Running Task Management"}),"\n",(0,t.jsx)(n.p,{children:"Terminate or mark as failed any Dagster runs that exceed configured timeouts."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Script"}),": ",(0,t.jsx)(n.code,{children:"kill_long_running_tasks.py"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"cd scripts/\npython kill_long_running_tasks.py\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Use Cases:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Clean up stuck or hanging jobs"}),"\n",(0,t.jsx)(n.li,{children:"Recover from unresponsive user code servers"}),"\n",(0,t.jsx)(n.li,{children:"Free up system resources"}),"\n",(0,t.jsx)(n.li,{children:"Maintenance and cleanup"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Features:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Uses same timeout as the timeout sensor (",(0,t.jsx)(n.code,{children:"ANOMSTACK_KILL_RUN_AFTER_MINUTES"}),")"]}),"\n",(0,t.jsx)(n.li,{children:"Graceful handling of unreachable code servers"}),"\n",(0,t.jsx)(n.li,{children:"Detailed logging of termination actions"}),"\n",(0,t.jsx)(n.li,{children:"Automatically marks stuck runs as failed when termination isn't possible"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"\ufe0f-database-utilities-sqlite",children:"\ud83d\uddc4\ufe0f Database Utilities (SQLite)"}),"\n",(0,t.jsx)(n.p,{children:"For users running Anomstack with SQLite as their database backend."}),"\n",(0,t.jsx)(n.h3,{id:"performance-optimization",children:"Performance Optimization"}),"\n",(0,t.jsx)(n.p,{children:"Create indexes on common metric columns for better query performance."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Script"}),": ",(0,t.jsx)(n.code,{children:"sqlite/create_index.py"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"cd scripts/sqlite/\npython create_index.py\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Creates indexes on:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"metric_timestamp"})," - Time-based queries"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"metric_batch"})," - Batch-based filtering"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"metric_type"})," - Type-based filtering (metric, score, alert)"]}),"\n",(0,t.jsx)(n.li,{children:"Combined indexes for common query patterns"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"database-inspection",children:"Database Inspection"}),"\n",(0,t.jsx)(n.p,{children:"Explore your SQLite database structure and contents."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"List all tables:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"cd scripts/sqlite/\npython list_tables.py\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"List all indexes:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"cd scripts/sqlite/\npython list_indexes.py\n"})}),"\n",(0,t.jsx)(n.h3,{id:"custom-sql-queries",children:"Custom SQL Queries"}),"\n",(0,t.jsx)(n.p,{children:"Execute ad-hoc SQL queries against your SQLite database."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Script"}),": ",(0,t.jsx)(n.code,{children:"sqlite/qry.py"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"cd scripts/sqlite/\n# Edit qry.sql with your custom query first\npython qry.py\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example queries:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"-- Recent anomalies across all metric batches\nSELECT \n    metric_timestamp,\n    metric_batch,\n    metric_name,\n    metric_value as anomaly_score\nFROM metrics \nWHERE metric_type = 'alert' \n    AND metric_value = 1\n    AND metric_timestamp >= datetime('now', '-7 days')\nORDER BY metric_timestamp DESC;\n\n-- Top metrics by anomaly count\nSELECT \n    metric_batch,\n    metric_name,\n    COUNT(*) as anomaly_count\nFROM metrics \nWHERE metric_type = 'alert' \n    AND metric_value = 1\nGROUP BY metric_batch, metric_name\nORDER BY anomaly_count DESC\nLIMIT 10;\n"})}),"\n",(0,t.jsx)(n.h2,{id:"-system-utilities",children:"\ud83d\udc33 System Utilities"}),"\n",(0,t.jsx)(n.h3,{id:"docker-environment-reset",children:"Docker Environment Reset"}),"\n",(0,t.jsx)(n.p,{children:"Comprehensive Docker reset utility with multiple cleanup levels."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Script"}),": ",(0,t.jsx)(n.code,{children:"utils/reset_docker.sh"})]}),"\n",(0,t.jsx)(n.h4,{id:"interactive-mode-recommended",children:"Interactive Mode (Recommended)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"make reset-interactive\n"})}),"\n",(0,t.jsx)(n.p,{children:"Provides a guided menu with options:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\ud83d\udd04 ",(0,t.jsx)(n.strong,{children:"Gentle"})," - Rebuild containers (safest)"]}),"\n",(0,t.jsxs)(n.li,{children:["\ud83e\uddf9 ",(0,t.jsx)(n.strong,{children:"Medium"})," - Remove containers, keep data"]}),"\n",(0,t.jsxs)(n.li,{children:["\u2622\ufe0f ",(0,t.jsx)(n.strong,{children:"Nuclear"})," - Remove all data and containers"]}),"\n",(0,t.jsxs)(n.li,{children:["\ud83d\udca5 ",(0,t.jsx)(n.strong,{children:"Full Nuclear"})," - Nuclear + full Docker cleanup"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"direct-reset-levels",children:"Direct Reset Levels"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Gentle Reset"})," (Safest - keeps all data):"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"make reset-gentle\n# or\n./scripts/utils/reset_docker.sh gentle\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Medium Reset"})," (Removes containers, preserves data):"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"make reset-medium\n# or\n./scripts/utils/reset_docker.sh medium\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Nuclear Reset"})," (Removes all data):"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"make reset-nuclear\n# or\n./scripts/utils/reset_docker.sh nuclear\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Full Nuclear Reset"})," (Maximum cleanup):"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"make reset-full-nuclear\n# or\n./scripts/utils/reset_docker.sh full-nuclear\n"})}),"\n",(0,t.jsx)(n.h4,{id:"features",children:"Features"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\ud83d\udcca Shows current disk usage before cleanup"}),"\n",(0,t.jsx)(n.li,{children:"\u26a0\ufe0f Multiple safety confirmations for destructive operations"}),"\n",(0,t.jsx)(n.li,{children:"\ud83c\udfa8 Colorful output with clear visual feedback"}),"\n",(0,t.jsx)(n.li,{children:"\ud83d\udee1\ufe0f Graceful fallback handling"}),"\n",(0,t.jsx)(n.li,{children:"\ud83d\udcbe Always preserves source code and configuration"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"dagster-storage-cleanup",children:"Dagster Storage Cleanup"}),"\n",(0,t.jsx)(n.p,{children:"Clean up old Dagster storage files and logs."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Script"}),": ",(0,t.jsx)(n.code,{children:"utils/cleanup_dagster_storage.sh"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"./scripts/utils/cleanup_dagster_storage.sh\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Cleans up:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Old compute logs"}),"\n",(0,t.jsx)(n.li,{children:"Artifact storage files"}),"\n",(0,t.jsx)(n.li,{children:"Event log storage"}),"\n",(0,t.jsx)(n.li,{children:"Run storage artifacts"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"-development-utilities",children:"\ud83e\uddea Development Utilities"}),"\n",(0,t.jsx)(n.h3,{id:"api-integration-testing",children:"API Integration Testing"}),"\n",(0,t.jsx)(n.p,{children:"Test external service integrations and credentials."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"PostHog Integration Test:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"cd scripts/\npython posthog_example.py\n"})}),"\n",(0,t.jsx)(n.p,{children:"Validates that your PostHog API credentials work correctly."}),"\n",(0,t.jsx)(n.h2,{id:"-common-usage-patterns",children:"\ud83d\udccb Common Usage Patterns"}),"\n",(0,t.jsx)(n.h3,{id:"daily-maintenance-workflow",children:"Daily Maintenance Workflow"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# 1. Clean up any stuck jobs\ncd scripts/\npython kill_long_running_tasks.py\n\n# 2. Optimize database performance (if using SQLite)\ncd sqlite/\npython create_index.py\n\n# 3. Check system status\ncd ../\npython list_tables.py  # Verify data is being written\n"})}),"\n",(0,t.jsx)(n.h3,{id:"configuration-update-workflow",children:"Configuration Update Workflow"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# 1. Make changes to your YAML configs or .env file\nvim metrics/my_metric/config.yaml\n\n# 2. Hot-reload the configuration\ncd scripts/\npython reload_config.py\n\n# 3. Verify changes took effect in Dagster UI\n"})}),"\n",(0,t.jsx)(n.h3,{id:"database-analysis-workflow",children:"Database Analysis Workflow"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# 1. Inspect database structure\ncd scripts/sqlite/\npython list_tables.py\npython list_indexes.py\n\n# 2. Run custom analysis queries\nvim qry.sql  # Write your analysis query\npython qry.py\n\n# 3. Create performance indexes if needed\npython create_index.py\n"})}),"\n",(0,t.jsx)(n.h3,{id:"system-reset-workflow",children:"System Reset Workflow"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# 1. Interactive guided reset (recommended)\nmake reset-interactive\n\n# 2. Or direct reset for automation\nmake reset-gentle      # Safe option\nmake reset-nuclear     # Clean slate option\n"})}),"\n",(0,t.jsx)(n.h2,{id:"\ufe0f-advanced-usage",children:"\ud83d\udee0\ufe0f Advanced Usage"}),"\n",(0,t.jsx)(n.h3,{id:"custom-environment-configuration",children:"Custom Environment Configuration"}),"\n",(0,t.jsx)(n.p,{children:"Most scripts respect environment variables:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Custom Dagster endpoint for reload_config.py\nexport DAGSTER_HOST=dagster.example.com\nexport DAGSTER_PORT=3000\npython reload_config.py\n\n# Custom timeout for kill_long_running_tasks.py\nexport ANOMSTACK_KILL_RUN_AFTER_MINUTES=120\npython kill_long_running_tasks.py\n\n# Custom database path for SQLite scripts\nexport ANOMSTACK_SQLITE_PATH=/path/to/custom.db\ncd sqlite/\npython list_tables.py\n"})}),"\n",(0,t.jsx)(n.h3,{id:"automation-and-scheduling",children:"Automation and Scheduling"}),"\n",(0,t.jsx)(n.p,{children:"Scripts can be integrated into automation workflows:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"#!/bin/bash\n# Daily maintenance script\n\n# Clean up stuck jobs\npython /path/to/anomstack/scripts/kill_long_running_tasks.py\n\n# Optimize database\npython /path/to/anomstack/scripts/sqlite/create_index.py\n\n# Generate daily report\npython /path/to/anomstack/scripts/sqlite/qry.py > daily_report.txt\n"})}),"\n",(0,t.jsx)(n.h3,{id:"docker-integration",children:"Docker Integration"}),"\n",(0,t.jsx)(n.p,{children:"Some scripts work seamlessly with Docker:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Execute scripts inside running containers\ndocker exec anomstack_code python /opt/dagster/app/scripts/reload_config.py\ndocker exec anomstack_code python /opt/dagster/app/scripts/kill_long_running_tasks.py\n"})}),"\n",(0,t.jsx)(n.h2,{id:"-security-considerations",children:"\ud83d\udd10 Security Considerations"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"File Permissions"}),": Ensure scripts have appropriate execute permissions"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Database Access"}),": SQLite scripts require read/write access to database files"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Network Access"}),": Config reload scripts need access to Dagster GraphQL endpoint"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Secrets"}),": Never hardcode credentials in custom scripts"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"-best-practices",children:"\ud83d\udca1 Best Practices"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Test First"}),": Always test scripts in development before production use"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Backup Data"}),": Create backups before running destructive operations"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Monitor Logs"}),": Check script output and logs for errors"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Document Changes"}),": Keep track of when and why you run scripts"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Version Control"}),": Track any modifications to scripts in version control"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"-troubleshooting",children:"\ud83c\udd98 Troubleshooting"}),"\n",(0,t.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Script can't find database:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Set the correct database path\nexport ANOMSTACK_SQLITE_PATH=/path/to/your/database.db\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Config reload fails:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Check if Dagster is running and accessible\ncurl http://localhost:3000/server_info\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Permission denied errors:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Make scripts executable\nchmod +x scripts/utils/reset_docker.sh\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"SQLite locked errors:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Stop Anomstack before running database scripts\nmake docker-stop\ncd scripts/sqlite/\npython your_script.py\nmake docker\n"})}),"\n",(0,t.jsx)(n.h3,{id:"getting-help",children:"Getting Help"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Check individual script help: ",(0,t.jsx)(n.code,{children:"python script_name.py --help"})]}),"\n",(0,t.jsx)(n.li,{children:"Review README files in each directory"}),"\n",(0,t.jsx)(n.li,{children:"Check Dagster UI for job status and logs"}),"\n",(0,t.jsxs)(n.li,{children:["Use interactive modes when available (",(0,t.jsx)(n.code,{children:"make reset-interactive"}),")"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>l});var i=s(6540);const t={},r=i.createContext(t);function a(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);