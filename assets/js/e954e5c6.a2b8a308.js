"use strict";(self.webpackChunkanomstack=self.webpackChunkanomstack||[]).push([[863],{4613:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>t,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"storage-optimization","title":"Storage Optimization","description":"Prevent Dagster storage buildup and manage disk space effectively","source":"@site/docs/storage-optimization.md","sourceDirName":".","slug":"/storage-optimization","permalink":"/anomstack/docs/storage-optimization","draft":false,"unlisted":false,"editUrl":"https://github.com/andrewm4894/anomstack/tree/main/docs/docs/storage-optimization.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"title":"Storage Optimization","description":"Prevent Dagster storage buildup and manage disk space effectively"},"sidebar":"docsSidebar","previous":{"title":"Fly.io Deployment","permalink":"/anomstack/docs/deployment/fly"},"next":{"title":"Environment Variables","permalink":"/anomstack/docs/configuration/environment-variables"}}');var r=s(4848),l=s(8453);const t={sidebar_position:3,title:"Storage Optimization",description:"Prevent Dagster storage buildup and manage disk space effectively"},a="Dagster Storage Optimization",d={},o=[{value:"The Problem: Excessive Storage Buildup",id:"the-problem-excessive-storage-buildup",level:2},{value:"Root Causes",id:"root-causes",level:2},{value:"Solutions Implemented",id:"solutions-implemented",level:2},{value:"1. Configuration Improvements",id:"1-configuration-improvements",level:3},{value:"Updated <code>dagster.yaml</code>",id:"updated-dagsteryaml",level:4},{value:"Updated <code>dagster_docker.yaml</code>",id:"updated-dagster_dockeryaml",level:4},{value:"2. Automated Cleanup Tools",id:"2-automated-cleanup-tools",level:3},{value:"Cleanup Script: <code>scripts/utils/cleanup_dagster_storage.sh</code>",id:"cleanup-script-scriptsutilscleanup_dagster_storagesh",level:4},{value:"Cleanup Levels:",id:"cleanup-levels",level:4},{value:"3. Environment Variable Updates",id:"3-environment-variable-updates",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"For Developers",id:"for-developers",level:3},{value:"For Production",id:"for-production",level:3},{value:"For CI/CD",id:"for-cicd",level:3},{value:"Storage Size Guidelines",id:"storage-size-guidelines",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Issue: &quot;212,000+ run directories&quot;",id:"issue-212000-run-directories",level:3},{value:"Issue: &quot;Disk space full&quot;",id:"issue-disk-space-full",level:3},{value:"Issue: &quot;Slow Dagster performance&quot;",id:"issue-slow-dagster-performance",level:3},{value:"Issue: &quot;Old runs not being cleaned up&quot;",id:"issue-old-runs-not-being-cleaned-up",level:3},{value:"Prevention Checklist",id:"prevention-checklist",level:2},{value:"Additional Resources",id:"additional-resources",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",input:"input",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"dagster-storage-optimization",children:"Dagster Storage Optimization"})}),"\n",(0,r.jsx)(n.h2,{id:"the-problem-excessive-storage-buildup",children:"The Problem: Excessive Storage Buildup"}),"\n",(0,r.jsx)(n.p,{children:"During development, Dagster can accumulate massive amounts of storage data if not properly configured. This can lead to:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"212,000+ run directories"})," in ",(0,r.jsx)(n.code,{children:"tmp/"})]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"63GB+ of accumulated storage"})}),"\n",(0,r.jsx)(n.li,{children:"System performance degradation"}),"\n",(0,r.jsx)(n.li,{children:"Disk space exhaustion"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"root-causes",children:"Root Causes"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"No retention policies"})," configured by default"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"High concurrent runs"})," (25+ simultaneous) creating many artifacts"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Indefinite storage"})," of compute logs and run metadata"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"No automatic cleanup"})," of old runs"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Large temp directories"})," without size limits"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"solutions-implemented",children:"Solutions Implemented"}),"\n",(0,r.jsx)(n.h3,{id:"1-configuration-improvements",children:"1. Configuration Improvements"}),"\n",(0,r.jsxs)(n.h4,{id:"updated-dagsteryaml",children:["Updated ",(0,r.jsx)(n.code,{children:"dagster.yaml"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"retention:\n  schedule:\n    purge_after_days: 3  # Reduced from 7\n  sensor:\n    purge_after_days:\n      skipped: 1   # Keep only 1 day of skipped runs  \n      failure: 3   # Keep 3 days of failures for debugging\n      success: 1   # Keep only 1 day of successful runs\n"})}),"\n",(0,r.jsxs)(n.h4,{id:"updated-dagster_dockeryaml",children:["Updated ",(0,r.jsx)(n.code,{children:"dagster_docker.yaml"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"run_coordinator:\n  config:\n    max_concurrent_runs: 10  # Reduced from 25\n\n# Added retention policies\nretention:\n  schedule:\n    purge_after_days: 3\n  sensor:\n    purge_after_days:\n      skipped: 1\n      failure: 3  \n      success: 1\n\n# Added run monitoring\nrun_monitoring:\n  enabled: true\n  start_timeout_seconds: 300\n  cancel_timeout_seconds: 180\n  max_runtime_seconds: 3600\n  poll_interval_seconds: 60\n\n# Disabled telemetry to reduce disk writes\ntelemetry:\n  enabled: false\n"})}),"\n",(0,r.jsx)(n.h3,{id:"2-automated-cleanup-tools",children:"2. Automated Cleanup Tools"}),"\n",(0,r.jsxs)(n.h4,{id:"cleanup-script-scriptsutilscleanup_dagster_storagesh",children:["Cleanup Script: ",(0,r.jsx)(n.code,{children:"scripts/utils/cleanup_dagster_storage.sh"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Interactive Menu:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"./scripts/utils/cleanup_dagster_storage.sh\n# or\nmake dagster-cleanup-menu\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Direct Commands:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Check current status\nmake dagster-cleanup-status\n\n# Safe cleanup (recommended)\nmake dagster-cleanup-minimal\n\n# Remove old runs (30+ days)\nmake dagster-cleanup-standard\n\n# Aggressive cleanup (7+ days)\nmake dagster-cleanup-aggressive\n"})}),"\n",(0,r.jsx)(n.h4,{id:"cleanup-levels",children:"Cleanup Levels:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Minimal"})," (\ud83d\udd27): Remove old logs only - safe for production"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Standard"})," (\ud83e\uddf9): Remove runs older than 30 days"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Aggressive"})," (\ud83d\udd25): Remove runs older than 7 days"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Nuclear"})," (\u2622\ufe0f): Remove all but last 24 hours"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"CLI-based"})," (\ud83d\udee0\ufe0f): Use Dagster's built-in cleanup commands"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"3-environment-variable-updates",children:"3. Environment Variable Updates"}),"\n",(0,r.jsxs)(n.p,{children:["Updated ",(0,r.jsx)(n.code,{children:".example.env"})," with lightweight defaults:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Lightweight storage paths\nANOMSTACK_DAGSTER_LOCAL_ARTIFACT_STORAGE_DIR=tmp_light/artifacts\nANOMSTACK_DAGSTER_LOCAL_COMPUTE_LOG_MANAGER_DIRECTORY=tmp_light/compute_logs\nANOMSTACK_DAGSTER_SQLITE_STORAGE_BASE_DIR=tmp_light/storage\n\n# Reduced concurrency\nANOMSTACK_DAGSTER_OVERALL_CONCURRENCY_LIMIT=5  # Reduced from 10\nANOMSTACK_DAGSTER_DEQUEUE_NUM_WORKERS=2        # Reduced from 4\n"})}),"\n",(0,r.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsx)(n.h3,{id:"for-developers",children:"For Developers"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Regular Monitoring:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"make dagster-cleanup-status  # Check storage weekly\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Routine Cleanup:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"make dagster-cleanup-minimal  # Weekly log cleanup\nmake dagster-cleanup-standard # Monthly run cleanup\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Emergency Cleanup:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"make dagster-cleanup-aggressive  # When disk space is low\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"for-production",children:"For Production"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Configure retention policies"})," in ",(0,r.jsx)(n.code,{children:"dagster_docker.yaml"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Limit concurrent runs"})," to reasonable numbers (5-15)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Enable run monitoring"})," to detect stuck runs"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Set up automated cleanup"})," using cron jobs:","\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Weekly cleanup cron job\n0 2 * * 0 /path/to/cleanup_dagster_storage.sh minimal\n\n# Monthly aggressive cleanup\n0 3 1 * * /path/to/cleanup_dagster_storage.sh standard\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"for-cicd",children:"For CI/CD"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Use ephemeral storage"})," when possible"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Clean up after tests:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"make dagster-cleanup-aggressive\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Monitor disk usage"})," in build scripts"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"storage-size-guidelines",children:"Storage Size Guidelines"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Storage Level"}),(0,r.jsx)(n.th,{children:"Recommended Action"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"< 1GB"}),(0,r.jsx)(n.td,{children:"\u2705 Healthy - continue monitoring"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"1-5GB"}),(0,r.jsx)(n.td,{children:"\u26a0\ufe0f Consider weekly cleanup"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"5-20GB"}),(0,r.jsx)(n.td,{children:"\ud83d\udd04 Run standard cleanup monthly"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"20-50GB"}),(0,r.jsx)(n.td,{children:"\ud83d\udd25 Run aggressive cleanup"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"> 50GB"}),(0,r.jsx)(n.td,{children:"\u2622\ufe0f Emergency cleanup required"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,r.jsx)(n.h3,{id:"issue-212000-run-directories",children:'Issue: "212,000+ run directories"'}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Solution:"})," Run nuclear cleanup, then configure retention policies"]}),"\n",(0,r.jsx)(n.h3,{id:"issue-disk-space-full",children:'Issue: "Disk space full"'}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Solution:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Run ",(0,r.jsx)(n.code,{children:"make dagster-cleanup-aggressive"})]}),"\n",(0,r.jsxs)(n.li,{children:["If still full, run ",(0,r.jsx)(n.code,{children:"make reset-nuclear"})]}),"\n",(0,r.jsx)(n.li,{children:"Configure retention policies before restarting"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"issue-slow-dagster-performance",children:'Issue: "Slow Dagster performance"'}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Solution:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Check storage with ",(0,r.jsx)(n.code,{children:"make dagster-cleanup-status"})]}),"\n",(0,r.jsx)(n.li,{children:"Run appropriate cleanup level"}),"\n",(0,r.jsxs)(n.li,{children:["Reduce ",(0,r.jsx)(n.code,{children:"max_concurrent_runs"})]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"issue-old-runs-not-being-cleaned-up",children:'Issue: "Old runs not being cleaned up"'}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Solution:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Verify retention policies in ",(0,r.jsx)(n.code,{children:"dagster_docker.yaml"})]}),"\n",(0,r.jsx)(n.li,{children:"Ensure Dagster daemon is running"}),"\n",(0,r.jsx)(n.li,{children:"Check database connectivity for PostgreSQL storage"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"prevention-checklist",children:"Prevention Checklist"}),"\n",(0,r.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Retention policies configured in ",(0,r.jsx)(n.code,{children:"dagster_docker.yaml"})]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Run monitoring enabled"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Concurrent runs limited (\u2264 15)"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Regular cleanup scheduled (weekly/monthly)"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Storage monitoring in place"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Telemetry disabled in production"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Environment variables optimized"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"additional-resources",children:"Additional Resources"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Interactive Cleanup"}),": ",(0,r.jsx)(n.code,{children:"make dagster-cleanup-menu"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Makefile Documentation"}),": Available in the project root ",(0,r.jsx)(n.code,{children:"Makefile.md#dagster-storage-cleanup"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Reset Scripts"}),": Available in ",(0,r.jsx)(n.code,{children:"scripts/utils/"})," directory"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Dagster Retention Docs"}),": ",(0,r.jsx)(n.a,{href:"https://docs.dagster.io/deployment/run-monitoring",children:"Official Documentation"})]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"\ud83d\udca1 Key Takeaway"}),": Proactive storage management prevents the 63GB+ buildup problem. Regular monitoring and cleanup are essential for healthy Dagster deployments."]})]})}function u(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>a});var i=s(6540);const r={},l=i.createContext(r);function t(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);