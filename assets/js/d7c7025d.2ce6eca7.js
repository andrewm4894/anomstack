"use strict";(self.webpackChunkanomstack=self.webpackChunkanomstack||[]).push([[571],{700:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>m,frontMatter:()=>c,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"gcs","title":"gcs","description":"Example of using GCS for model storage. See examples/bigquery directory for an example.","source":"@site/docs/gcs.md","sourceDirName":".","slug":"/gcs","permalink":"/anomstack/docs/gcs","draft":false,"unlisted":false,"editUrl":"https://github.com/andrewm4894/anomstack/tree/main/docs/docs/gcs.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Redshift","permalink":"/anomstack/docs/data-sources/redshift"},"next":{"title":"s3","permalink":"/anomstack/docs/s3"}}');var o=t(4848),r=t(8453);const c={},i="gcs",a={},l=[{value:"Configuration",id:"configuration",level:2}];function d(e){const n={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"gcs",children:"gcs"})}),"\n",(0,o.jsxs)(n.p,{children:["Example of using GCS for model storage. See ",(0,o.jsx)(n.a,{href:"https://github.com/andrewm4894/anomstack/tree/main/metrics/examples/bigquery/",children:(0,o.jsx)(n.code,{children:"examples/bigquery"})})," directory for an example."]}),"\n",(0,o.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["Set below environment variables.","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"ANOMSTACK_GOOGLE_APPLICATION_CREDENTIALS"}),": Path to the Google Cloud Platform service account key file.",(0,o.jsx)(n.br,{}),"\n","or"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"ANOMSTACK_GOOGLE_APPLICATION_CREDENTIALS_JSON"}),": JSON string of the Google Cloud Platform service account key file."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"ANOMSTACK_MODEL_PATH"}),": Path to the model file on GCS (can also be set in metric batch config yaml as ",(0,o.jsx)(n.code,{children:"model_path"})," param)."]}),"\n"]}),"\n"]}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>i});var s=t(6540);const o={},r=s.createContext(o);function c(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);