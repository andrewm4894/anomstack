"use strict";(self.webpackChunkanomstack=self.webpackChunkanomstack||[]).push([[264],{8495:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>m,frontMatter:()=>s,metadata:()=>r,toc:()=>d});var a=t(4848),o=t(8453);const s={},c="Goolge Cloud Platform",r={id:"deployment/gcp",title:"Goolge Cloud Platform",description:"Deploying to a VM",source:"@site/docs/deployment/gcp.md",sourceDirName:"deployment",slug:"/deployment/gcp",permalink:"/anomstack/docs/deployment/gcp",draft:!1,unlisted:!1,editUrl:"https://github.com/andrewm4894/anomstack/tree/main/docs/docs/deployment/gcp.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"s3",permalink:"/anomstack/docs/s3"},next:{title:"Start Schedules (GraphQL)",permalink:"/anomstack/docs/graphql/examples/start_schedule"}},l={},d=[{value:"Deploying to a VM",id:"deploying-to-a-vm",level:2},{value:"Create VM",id:"create-vm",level:3},{value:"Configure VM",id:"configure-vm",level:3},{value:"Docker: Install Docker",id:"docker-install-docker",level:4},{value:"Docker: Install Anomstack",id:"docker-install-anomstack",level:4},{value:"Systemd: Install Anomstack",id:"systemd-install-anomstack",level:4},{value:"Adding Your Metrics",id:"adding-your-metrics",level:3},{value:"Docker",id:"docker",level:4}];function i(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"goolge-cloud-platform",children:"Goolge Cloud Platform"})}),"\n",(0,a.jsx)(n.h2,{id:"deploying-to-a-vm",children:"Deploying to a VM"}),"\n",(0,a.jsx)(n.p,{children:"TODO: add username and password behind nginx"}),"\n",(0,a.jsx)(n.h3,{id:"create-vm",children:"Create VM"}),"\n",(0,a.jsx)(n.p,{children:"First set some environment variables:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Set these to your own values where they are empty\n\n# Set this to your own project id\nexport PROJECT_ID=\n# Set this to your own IP address or 0.0.0.0 to allow all\nexport YOUR_IP_ADDRESS=\n\n# Set these to your own values or leave as is\nexport REGION=us-central1\nexport ZONE=us-central1-a\nexport INSTANCE_NAME=anomstack\nexport MACHINE_TYPE=e2-standard-2\nexport RANGE=10.0.0.0/24\n"})}),"\n",(0,a.jsx)(n.p,{children:"Create a service account."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'gcloud iam service-accounts create anomstack-service-account \\\n    --project=$PROJECT_ID \\\n    --description="Anomstack service account" \\\n    --display-name="Anomstack service account"\n'})}),"\n",(0,a.jsx)(n.p,{children:"Create the VPC network for Anomstack."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"gcloud compute networks create anomstack --project=$PROJECT_ID\n"})}),"\n",(0,a.jsx)(n.p,{children:"Create the subnet."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"gcloud compute networks subnets create anomstack \\\n    --network=anomstack \\\n    --region=$REGION \\\n    --range=$RANGE \\\n    --project=$PROJECT_ID\n"})}),"\n",(0,a.jsx)(n.p,{children:"Create the firewall rule to allow traffic."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"gcloud compute firewall-rules create allow-anomstack-internal \\\n    --network=anomstack \\\n    --allow=tcp,udp,icmp \\\n    --source-ranges=$RANGE \\\n    --project=$PROJECT_ID\n"})}),"\n",(0,a.jsx)(n.p,{children:"Create the firewall rule to allow SSH traffic."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"gcloud compute firewall-rules create allow-ssh \\\n    --network=anomstack \\\n    --allow=tcp:22 \\\n    --source-ranges=$YOUR_IP_ADDRESS \\\n    --project=$PROJECT_ID\n"})}),"\n",(0,a.jsx)(n.p,{children:"Create the firewall rule to allow traffic to Dagster UI."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"gcloud compute firewall-rules create allow-anomstack-3000 \\\n    --network=anomstack \\\n    --allow=tcp:3000 \\\n    --source-ranges=$YOUR_IP_ADDRESS \\\n    --project=$PROJECT_ID\n"})}),"\n",(0,a.jsx)(n.p,{children:"Create the VM:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'gcloud compute instances create $INSTANCE_NAME \\\n--project=$PROJECT_ID \\\n--zone=$ZONE \\\n--machine-type=$MACHINE_TYPE \\\n--service-account="anomstack-service-account@$PROJECT_ID.iam.gserviceaccount.com" \\\n--network-interface="network-tier=PREMIUM,stack-type=IPV4_ONLY,subnet=anomstack" \\\n--create-disk="auto-delete=yes,boot=yes,device-name=$INSTANCE_NAME,image=projects/ubuntu-os-cloud/global/images/ubuntu-2004-focal-v20231101,mode=rw,size=50,type=projects/$PROJECT_ID/zones/$ZONE/diskTypes/pd-balanced"\n'})}),"\n",(0,a.jsx)(n.h3,{id:"configure-vm",children:"Configure VM"}),"\n",(0,a.jsx)(n.h4,{id:"docker-install-docker",children:"Docker: Install Docker"}),"\n",(0,a.jsx)(n.p,{children:"After the VM is created, SSH into it:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# SSH into the VM\ngcloud compute ssh $INSTANCE_NAME --zone=$ZONE --project=$PROJECT_ID\n"})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"https://docs.docker.com/engine/install/ubuntu/",children:"Install Docker"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'# Add Docker\'s official GPG key:\nsudo apt-get update\nsudo apt-get install ca-certificates curl gnupg\nsudo install -m 0755 -d /etc/apt/keyrings\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg\nsudo chmod a+r /etc/apt/keyrings/docker.gpg\n\n# Add the repository to Apt sources:\necho \\\n  "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \\\n  "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \\\n  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null\nsudo apt-get update\n\n# Install Docker Engine:\nsudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n\n# Verify that Docker Engine is installed correctly by running the hello-world image:\nsudo docker run hello-world\n'})}),"\n",(0,a.jsx)(n.h4,{id:"docker-install-anomstack",children:"Docker: Install Anomstack"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# clone anomstack\ngit clone https://github.com/andrewm4894/anomstack.git\n\n# or\n\n# clone repo at specific release tag\n# git clone -b v0.0.1 https://github.com/andrewm4894/anomstack.git\n\n# cd into anomstack\ncd anomstack\n\n# copy .env file\ncp .example.env .env\n\n# edit .env as needed or leave as is for local duckdb based setup\n\n# start anomstack\nsudo docker compose up -d --build\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Once the containers are up and running, you can access the UI at ",(0,a.jsx)(n.code,{children:"http://<your-vm-ip>:3000"}),"."]}),"\n",(0,a.jsx)(n.h4,{id:"systemd-install-anomstack",children:"Systemd: Install Anomstack"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Create anomstack user\nsudo useradd -m -d /home/anomstack anomstack\n\n# Switch to anomstack user\nsudo -su anomstack\n\n# Clone anomstack into /home/anomstack/anomstack\ngit clone https://github.com/andrewm4894/anomstack.git /home/anomstack/anomstack\n# or\n# Clone repo at specific release tag\n# git clone -b v0.0.1 https://github.com/andrewm4894/anomstack.git\n\n# cd into anomstack\ncd /home/anomstack/anomstack\n\n# Create Python virtual environment\npython3 -m venv venv\n\n# Activate virtual environment\nsource venv/bin/activate\n\n# Install requirements\npip3 install -r requirements.txt\n\n# Copy .env file\ncp .example.env .env\n\n# Run anomstack locally\ndagster dev -f anomstack/main.py\n"})}),"\n",(0,a.jsx)(n.p,{children:"Assuming everything is working, you can now create a systemd service to run anomstack."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Create the systemd service file\ncat << EOF | sudo tee /etc/systemd/system/anomstack.service\n[Unit]\nDescription=Anomstack Service\nAfter=network.target\n\n[Service]\nUser=anomstack\nWorkingDirectory=/home/anomstack/anomstack\nExecStart=/home/anomstack/anomstack/.venv/bin/python /home/anomstack/anomstack/main.py\nRestart=always\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\n# Reload systemd to read new service file\nsudo systemctl daemon-reload\n\n# Enable and start the Anomstack service\nsudo systemctl enable anomstack.service\nsudo systemctl start anomstack.service\n"})}),"\n",(0,a.jsx)(n.h3,{id:"adding-your-metrics",children:"Adding Your Metrics"}),"\n",(0,a.jsxs)(n.p,{children:["After you add whatever environment variables you need to the ",(0,a.jsx)(n.code,{children:".env"})," file, you can add your metrics to the ",(0,a.jsx)(n.code,{children:"metrics"})," folder."]}),"\n",(0,a.jsx)(n.h4,{id:"docker",children:"Docker"}),"\n",(0,a.jsx)(n.p,{children:"Once ready you can rebuild and then restart the containers:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# from within anomstack folder\n\n# build anomstack\nsudo docker compose build\n\n# restart anomstack with latest metrics and changes\nsudo docker compose up -d\n"})})]})}function m(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(i,{...e})}):i(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>r});var a=t(6540);const o={},s=a.createContext(o);function c(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);