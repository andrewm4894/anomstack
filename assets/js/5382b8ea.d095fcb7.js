"use strict";(self.webpackChunkanomstack=self.webpackChunkanomstack||[]).push([[301],{5496:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>c});var s=n(4848),i=n(8453);const a={sidebar_position:8},r="Turso",o={id:"data-sources/turso",title:"Turso",description:"Anomstack supports Turso as a data source for your metrics. Turso is a distributed SQLite database that provides global replication and edge computing capabilities.",source:"@site/docs/data-sources/turso.md",sourceDirName:"data-sources",slug:"/data-sources/turso",permalink:"/anomstack/docs/data-sources/turso",draft:!1,unlisted:!1,editUrl:"https://github.com/andrewm4894/anomstack/tree/main/docs/docs/data-sources/turso.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"docsSidebar",previous:{title:"MotherDuck",permalink:"/anomstack/docs/data-sources/motherduck"},next:{title:"Redshift",permalink:"/anomstack/docs/data-sources/redshift"}},l={},c=[{value:"Configuration",id:"configuration",level:2},{value:"Default Configuration",id:"default-configuration",level:2},{value:"Features",id:"features",level:2},{value:"Examples",id:"examples",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"Limitations",id:"limitations",level:2},{value:"Related Links",id:"related-links",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"turso",children:"Turso"})}),"\n",(0,s.jsx)(t.p,{children:"Anomstack supports Turso as a data source for your metrics. Turso is a distributed SQLite database that provides global replication and edge computing capabilities."}),"\n",(0,s.jsx)(t.h2,{id:"configuration",children:"Configuration"}),"\n",(0,s.jsxs)(t.p,{children:["Configure Turso in your metric batch's ",(0,s.jsx)(t.code,{children:"config.yaml"}),":"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",children:'db: "turso"\ntable_key: "your_database.metrics"  # Your Turso database and table\nmetric_batch: "your_metric_batch_name"\ningest_cron_schedule: "*/3 * * * *"  # When to run the ingestion\ningest_sql: >\n  select\n    datetime(\'now\') as metric_timestamp,\n    \'metric_name\' as metric_name,\n    your_value as metric_value\n  from your_table;\n'})}),"\n",(0,s.jsx)(t.h2,{id:"default-configuration",children:"Default Configuration"}),"\n",(0,s.jsxs)(t.p,{children:["Many configuration parameters can be set in ",(0,s.jsx)(t.code,{children:"metrics/defaults/defaults.yaml"})," to apply across all metric batches. Key defaults include:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",children:'db: "duckdb"  # Default database type\ntable_key: "metrics"  # Default table name\ningest_cron_schedule: "*/3 * * * *"  # Default ingestion schedule\nmodel_path: "local://./models"  # Default model storage location\nalert_methods: "email,slack"  # Default alert methods\n'})}),"\n",(0,s.jsx)(t.p,{children:"You can override any of these defaults in your metric batch's configuration file."}),"\n",(0,s.jsx)(t.h2,{id:"features",children:"Features"}),"\n",(0,s.jsx)(t.p,{children:"Turso provides:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Global replication"}),"\n",(0,s.jsx)(t.li,{children:"Edge computing"}),"\n",(0,s.jsx)(t.li,{children:"SQLite compatibility"}),"\n",(0,s.jsx)(t.li,{children:"Real-time sync"}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsxs)(t.p,{children:["Check out the ",(0,s.jsx)(t.a,{href:"https://github.com/andrewm4894/anomstack/tree/main/metrics/examples/turso",children:"Turso example"})," for a complete working example."]}),"\n",(0,s.jsx)(t.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Token security"}),"\n",(0,s.jsx)(t.li,{children:"Query optimization"}),"\n",(0,s.jsx)(t.li,{children:"Replication strategy"}),"\n",(0,s.jsx)(t.li,{children:"Data partitioning"}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"limitations",children:"Limitations"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Query timeout limits"}),"\n",(0,s.jsx)(t.li,{children:"Concurrent query limits"}),"\n",(0,s.jsx)(t.li,{children:"Storage limitations"}),"\n",(0,s.jsx)(t.li,{children:"Cost considerations"}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"related-links",children:"Related Links"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"https://turso.tech/docs",children:"Turso Documentation"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"https://github.com/andrewm4894/anomstack/tree/main/metrics/examples/turso",children:"Example Queries"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"https://github.com/andrewm4894/anomstack/tree/main/metrics/defaults/defaults.yaml",children:"Default Configuration"})}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>o});var s=n(6540);const i={},a=s.createContext(i);function r(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(a.Provider,{value:t},e.children)}}}]);