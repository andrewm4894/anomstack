"use strict";(self.webpackChunkanomstack=self.webpackChunkanomstack||[]).push([[627],{6421:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>r,toc:()=>o});var n=i(4848),s=i(8453);const a={sidebar_position:6},l="SQLite",r={id:"data-sources/sqlite",title:"SQLite",description:"Anomstack supports SQLite as a data source for your metrics. SQLite is a lightweight, file-based database that's perfect for local development and small to medium-sized applications.",source:"@site/docs/data-sources/sqlite.md",sourceDirName:"data-sources",slug:"/data-sources/sqlite",permalink:"/anomstack/docs/data-sources/sqlite",draft:!1,unlisted:!1,editUrl:"https://github.com/andrewm4894/anomstack/tree/main/docs/docs/data-sources/sqlite.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"docsSidebar",previous:{title:"DuckDB",permalink:"/anomstack/docs/data-sources/duckdb"},next:{title:"MotherDuck",permalink:"/anomstack/docs/data-sources/motherduck"}},c={},o=[{value:"Configuration",id:"configuration",level:2},{value:"Default Configuration",id:"default-configuration",level:2},{value:"Features",id:"features",level:2},{value:"Examples",id:"examples",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"Limitations",id:"limitations",level:2},{value:"Related Links",id:"related-links",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"sqlite",children:"SQLite"})}),"\n",(0,n.jsx)(t.p,{children:"Anomstack supports SQLite as a data source for your metrics. SQLite is a lightweight, file-based database that's perfect for local development and small to medium-sized applications."}),"\n",(0,n.jsx)(t.h2,{id:"configuration",children:"Configuration"}),"\n",(0,n.jsxs)(t.p,{children:["Configure SQLite in your metric batch's ",(0,n.jsx)(t.code,{children:"config.yaml"}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-yaml",children:'db: "sqlite"\ntable_key: "metrics"  # Default table to store metrics\nmetric_batch: "your_metric_batch_name"\ningest_cron_schedule: "*/3 * * * *"  # When to run the ingestion\ningest_sql: >\n  select\n    datetime(\'now\') as metric_timestamp,\n    \'metric_name\' as metric_name,\n    your_value as metric_value\n  from your_table;\n'})}),"\n",(0,n.jsx)(t.h2,{id:"default-configuration",children:"Default Configuration"}),"\n",(0,n.jsxs)(t.p,{children:["Many configuration parameters can be set in ",(0,n.jsx)(t.code,{children:"metrics/defaults/defaults.yaml"})," to apply across all metric batches. Key defaults include:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-yaml",children:'db: "duckdb"  # Default database type\ntable_key: "metrics"  # Default table name\ningest_cron_schedule: "*/3 * * * *"  # Default ingestion schedule\nmodel_path: "local://./models"  # Default model storage location\nalert_methods: "email,slack"  # Default alert methods\n'})}),"\n",(0,n.jsx)(t.p,{children:"You can override any of these defaults in your metric batch's configuration file."}),"\n",(0,n.jsx)(t.h2,{id:"features",children:"Features"}),"\n",(0,n.jsx)(t.p,{children:"SQLite provides:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"File-based database storage"}),"\n",(0,n.jsx)(t.li,{children:"Zero configuration"}),"\n",(0,n.jsx)(t.li,{children:"ACID compliance"}),"\n",(0,n.jsx)(t.li,{children:"Full SQL support"}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,n.jsxs)(t.p,{children:["Check out the ",(0,n.jsx)(t.a,{href:"https://github.com/andrewm4894/anomstack/tree/main/metrics/examples/sqlite",children:"SQLite example"})," for a complete working example."]}),"\n",(0,n.jsx)(t.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"Regular database backups"}),"\n",(0,n.jsx)(t.li,{children:"Proper file permissions"}),"\n",(0,n.jsx)(t.li,{children:"Index optimization"}),"\n",(0,n.jsx)(t.li,{children:"Query optimization"}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"limitations",children:"Limitations"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"Concurrent write operations"}),"\n",(0,n.jsx)(t.li,{children:"File size limitations"}),"\n",(0,n.jsx)(t.li,{children:"Memory constraints"}),"\n",(0,n.jsx)(t.li,{children:"Network access limitations"}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"related-links",children:"Related Links"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"https://www.sqlite.org/docs.html",children:"SQLite Documentation"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"https://github.com/andrewm4894/anomstack/tree/main/metrics/examples/sqlite",children:"Example Queries"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"https://github.com/andrewm4894/anomstack/tree/main/metrics/defaults/defaults.yaml",children:"Default Configuration"})}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>l,x:()=>r});var n=i(6540);const s={},a=n.createContext(s);function l(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);