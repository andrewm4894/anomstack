"use strict";(self.webpackChunkanomstack=self.webpackChunkanomstack||[]).push([[8013],{8688:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>n,toc:()=>o});const n=JSON.parse('{"id":"data-sources/redshift","title":"Redshift","description":"Anomstack supports Amazon Redshift as a data source for your metrics. Redshift is a fully managed, petabyte-scale data warehouse service.","source":"@site/docs/data-sources/redshift.md","sourceDirName":"data-sources","slug":"/data-sources/redshift","permalink":"/anomstack/docs/data-sources/redshift","draft":false,"unlisted":false,"editUrl":"https://github.com/andrewm4894/anomstack/tree/main/docs/docs/data-sources/redshift.md","tags":[],"version":"current","sidebarPosition":9,"frontMatter":{"sidebar_position":9},"sidebar":"docsSidebar","previous":{"title":"Turso","permalink":"/anomstack/docs/data-sources/turso"},"next":{"title":"gcs","permalink":"/anomstack/docs/gcs"}}');var i=s(4848),a=s(8453);const r={sidebar_position:9},l="Redshift",c={},o=[{value:"Configuration",id:"configuration",level:2},{value:"Default Configuration",id:"default-configuration",level:2},{value:"Features",id:"features",level:2},{value:"Examples",id:"examples",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"Limitations",id:"limitations",level:2},{value:"Related Links",id:"related-links",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"redshift",children:"Redshift"})}),"\n",(0,i.jsx)(t.p,{children:"Anomstack supports Amazon Redshift as a data source for your metrics. Redshift is a fully managed, petabyte-scale data warehouse service."}),"\n",(0,i.jsx)(t.h2,{id:"configuration",children:"Configuration"}),"\n",(0,i.jsxs)(t.p,{children:["Configure Redshift in your metric batch's ",(0,i.jsx)(t.code,{children:"config.yaml"}),":"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:'db: "redshift"\ntable_key: "your_database.schema.metrics"  # Your Redshift database, schema, and table\nmetric_batch: "your_metric_batch_name"\ningest_cron_schedule: "*/3 * * * *"  # When to run the ingestion\ningest_sql: >\n  select\n    current_timestamp as metric_timestamp,\n    \'metric_name\' as metric_name,\n    your_value as metric_value\n  from your_table;\n'})}),"\n",(0,i.jsx)(t.h2,{id:"default-configuration",children:"Default Configuration"}),"\n",(0,i.jsxs)(t.p,{children:["Many configuration parameters can be set in ",(0,i.jsx)(t.code,{children:"metrics/defaults/defaults.yaml"})," to apply across all metric batches. Key defaults include:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:'db: "duckdb"  # Default database type\ntable_key: "metrics"  # Default table name\ningest_cron_schedule: "*/3 * * * *"  # Default ingestion schedule\nmodel_path: "local://./models"  # Default model storage location\nalert_methods: "email,slack"  # Default alert methods\n'})}),"\n",(0,i.jsx)(t.p,{children:"You can override any of these defaults in your metric batch's configuration file."}),"\n",(0,i.jsx)(t.h2,{id:"features",children:"Features"}),"\n",(0,i.jsx)(t.p,{children:"Redshift provides:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Petabyte-scale data warehouse"}),"\n",(0,i.jsx)(t.li,{children:"Columnar storage"}),"\n",(0,i.jsx)(t.li,{children:"Parallel query execution"}),"\n",(0,i.jsx)(t.li,{children:"Advanced analytics"}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsxs)(t.p,{children:["Check out the ",(0,i.jsx)(t.a,{href:"https://github.com/andrewm4894/anomstack/tree/main/metrics/examples/redshift",children:"Redshift example"})," for a complete working example."]}),"\n",(0,i.jsx)(t.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Query optimization"}),"\n",(0,i.jsx)(t.li,{children:"Distribution key selection"}),"\n",(0,i.jsx)(t.li,{children:"Sort key optimization"}),"\n",(0,i.jsx)(t.li,{children:"Workload management"}),"\n",(0,i.jsx)(t.li,{children:"Cost optimization"}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"limitations",children:"Limitations"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Query timeout limits"}),"\n",(0,i.jsx)(t.li,{children:"Concurrent query limits"}),"\n",(0,i.jsx)(t.li,{children:"Storage limitations"}),"\n",(0,i.jsx)(t.li,{children:"Cost considerations"}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"related-links",children:"Related Links"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://docs.aws.amazon.com/redshift/",children:"Redshift Documentation"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://github.com/andrewm4894/anomstack/tree/main/metrics/examples/redshift",children:"Example Queries"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://github.com/andrewm4894/anomstack/tree/main/metrics/defaults/defaults.yaml",children:"Default Configuration"})}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>r,x:()=>l});var n=s(6540);const i={},a=n.createContext(i);function r(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);