scheduler:
  module: dagster.core.scheduler
  class: DagsterDaemonScheduler

run_coordinator:
  module: dagster.core.run_coordinator
  class: QueuedRunCoordinator
  config:
    max_concurrent_runs: 10  # Reduced from 25 to prevent excessive storage
    tag_concurrency_limits:
      - key: "dagster/concurrency_key"
        value: "database"
        limit: 2  # Reduced from 3
      - key: "dagster/concurrency_key"
        value: "ml_training"
        limit: 1  # Reduced from 2

run_launcher:
  module: dagster_docker
  class: DockerRunLauncher
  config:
    env_vars:
      - DAGSTER_POSTGRES_USER
      - DAGSTER_POSTGRES_PASSWORD
      - DAGSTER_POSTGRES_DB
      - ANOMSTACK_DUCKDB_PATH
      - ANOMSTACK_TABLE_KEY
      - ANOMSTACK_MODEL_PATH
      - ANOMSTACK_IGNORE_EXAMPLES
      - DAGSTER_HOME
      - ANOMSTACK_HOME
    network: anomstack_network
    container_kwargs:
      volumes: # Make docker client accessible to any launched containers as well
        - /var/run/docker.sock:/var/run/docker.sock
        - /tmp/io_manager_storage:/tmp/io_manager_storage
        - ${ANOMSTACK_HOME}/tmp:/opt/dagster/app/tmp
        - ${ANOMSTACK_HOME}/dagster_home:/opt/dagster/dagster_home
        - ${ANOMSTACK_HOME}/metrics:/opt/dagster/app/metrics
        - anomstack_metrics_duckdb:/data

run_storage:
  module: dagster_postgres.run_storage
  class: PostgresRunStorage
  config:
    postgres_db:
      hostname: anomstack_postgresql
      username:
        env: DAGSTER_POSTGRES_USER
      password:
        env: DAGSTER_POSTGRES_PASSWORD
      db_name:
        env: DAGSTER_POSTGRES_DB
      port: 5432

run_retries:
  enabled: true
  max_retries: 1

# Aggressive retention policies to prevent disk space issues
retention:
  schedule:
    purge_after_days: 3  # Keep schedule runs for 3 days
  sensor:
    purge_after_days:
      skipped: 1   # Keep only 1 day of skipped sensor runs
      failure: 3   # Keep 3 days of failed runs for debugging
      success: 1   # Keep only 1 day of successful sensor runs

# Run monitoring to detect and clean up stuck runs
run_monitoring:
  enabled: true
  start_timeout_seconds: 300   # 5 minutes to start
  cancel_timeout_seconds: 180  # 3 minutes to cancel
  max_runtime_seconds: 3600    # 1 hour max runtime per run
  max_resume_run_attempts: 2   # Resume runs after worker crashes (DockerRunLauncher only)
  poll_interval_seconds: 60    # Check every minute

# Disable telemetry to reduce disk writes
telemetry:
  enabled: false

schedules:
  use_threads: true
  num_workers: 8

sensors:
  use_threads: true
  num_workers: 4

schedule_storage:
  module: dagster_postgres.schedule_storage
  class: PostgresScheduleStorage
  config:
    postgres_db:
      hostname: anomstack_postgresql
      username:
        env: DAGSTER_POSTGRES_USER
      password:
        env: DAGSTER_POSTGRES_PASSWORD
      db_name:
        env: DAGSTER_POSTGRES_DB
      port: 5432

event_log_storage:
  module: dagster_postgres.event_log
  class: PostgresEventLogStorage
  config:
    postgres_db:
      hostname: anomstack_postgresql
      username:
        env: DAGSTER_POSTGRES_USER
      password:
        env: DAGSTER_POSTGRES_PASSWORD
      db_name:
        env: DAGSTER_POSTGRES_DB
      port: 5432
